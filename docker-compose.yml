version: "3.8"

services:
  rabbitmq:
    restart: always
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=username
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD", "rabbitmqctl", "wait", "--timeout", "5"]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - mynetwork

  auth-services:
    build:
      context: ./auth-services
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-db
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGO_URI: mongodb://auth-db:27017/authdb
      MESSAGE_BUS: amqp://username:password@rabbitmq:5672/
    image: auth-services:latest
    networks:
      - mynetwork

  product-services:
    build:
      context: ./product-services
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - product-db
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGO_URI: mongodb://product-db:27017/productdb
      MESSAGE_BUS: amqp://username:password@rabbitmq:5672/
    image: product-services:latest
    networks:
      - mynetwork

  cart-services:
    build:
      context: ./cart-services
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - cart-db
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGO_URI: mongodb://cart-db:27017/cartdb
      MESSAGE_BUS: amqp://username:password@rabbitmq:5672/
    image: cart-services:latest
    networks:
      - mynetwork

  order-services:
    build:
      context: ./order-services
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - order-db
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      MONGO_URI: mongodb://order-db:27017/orderdb
      MESSAGE_BUS: amqp://username:password@rabbitmq:5672/
    image: order-services:latest
    networks:
      - mynetwork

  auth-db:
    image: mongo
    container_name: auth-db
    ports:
      - "27017:27017"
    networks:
      - mynetwork

  product-db:
    image: mongo
    container_name: product-db
    ports:
      - "27018:27017"
    networks:
      - mynetwork

  cart-db:
    image: mongo
    container_name: cart-db
    ports:
      - "27019:27017"
    networks:
      - mynetwork

  order-db:
    image: mongo
    container_name: order-db
    ports:
      - "27020:27017"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  rabbitmq-data:
